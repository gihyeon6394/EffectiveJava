2장 객체 생성과 파괴
- 객체를 만들 때와 만들지 말아야할떄를 구분하는 법
- 올바른 객체 생성 방법
- 불필요한 생성을 피하는 방법
- 객체의 적절한 파괴시점을 보장하는 방법
- 객체 파괴 전에 수행해야하는 정리작업들

contents
item 1 : 생성자 대신 정적 팩터리 메서드를 고려하라
        -> 생성자보다 커스터 마이징 (이름, 싱글톤)이 가능한 정적 팩터리 메서드가 대부분의 경우 좋다.

item 2 : 생성자에 매개변수가 많다면 빌더를 고려하라
        -> 매개변수가 4개 이상이라면 빌더를 고려해라. 4개 미만이어도 결국 많아질 것이기 때문에 애초에 빌더를 적용해도 좋다.

item 3 : private 생성자나 열거 타입으로 싱글턴임을 보증하라
        -> 무상태 객체는 싱글톤으로 만들어라. 그리고 싱글톤은 enum이 좋음.

item 4 : 인스턴스화를 막으려거든 private 생성자를 사용하라
        -> 정적 멤버들만 있다면 인스턴스화가 못되게 해야한다.

item 5 : 자원을 직접 명시하지 말고 의존 객체 주입을 사용하라
        -> 클래스의 인스턴스 변수가 바뀌어야한다면, DI 해라. 인스턴스 변수가 변경되는 클래스는 싱글톤 적합하지 않음.(not thread-safe)

item 6 : 불필요한 객체 생성을 피하라
        ->


